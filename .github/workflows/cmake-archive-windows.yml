name: Build and Package NeuroTensor (Windows Only)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Tag version (e.g., v1.2.3)"
        required: true

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - nt_core
          - nt_types
          - nt_functional
          - nt_functional_cpu
          - nt_matmult
          - nt_linalg
          - nt_svd
          - nt_qr
          - nt_inv
          - nt_column_space
          - nt_null_space
          - nt_ai
          - nt_tda
          - nt_sparse
          - nt_images
          - nt_memory
          - nt_multi_processing
          - nt_fmri

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up sccache
        uses: mozilla-actions/sccache-action@v0.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore build/ directory cache
        uses: actions/cache@v4
        with:
          path: build/
          key: neurotensor-win-build-${{ matrix.target }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            neurotensor-win-build-${{ matrix.target }}-

      - name: Configure CMake
        run: >
          cmake -S . -B build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=install
          -DCMAKE_C_COMPILER_LAUNCHER=sccache
          -DCMAKE_CXX_COMPILER_LAUNCHER=sccache
          -DBUILD_MAIN=OFF
      
      - name: Build target ${{ matrix.target }} if not already built
        shell: cmd
        run: |
          if not exist build\\.built_${{ matrix.target }} (
            cmake --build build --target ${{ matrix.target }} --config Release
            echo done > build\\.built_${{ matrix.target }}
          )

      - name: Save build cache
        uses: actions/cache/save@v4
        with:
          path: build/
          key: neurotensor-win-build-all-${{ github.run_id }}


  package:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore build from any matrix target
        uses: actions/cache@v4
        with:
          path: build/
          key: neurotensor-win-build-all-${{ github.run_id }}
          restore-keys: |
            neurotensor-win-build-
      
      - name: List build output
        run: Get-ChildItem -Recurse build\Release

      - name: Configure CMake if needed
        shell: cmd
        run: |
          if not exist build/CMakeCache.txt (
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install -DBUILD_MAIN=OFF
          )

      - name: Build neurotensor only
        run: cmake --build build --target neurotensor --config Release

      - name: Install
        run: cmake --install build --prefix package-out

      - name: Archive package
        run: |
          powershell -Command "Compress-Archive -Path package-out\* -DestinationPath neurotensor-windows-x86_64-${{ github.event.inputs.version }}.zip"

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: "NeuroTensor ${{ github.event.inputs.version }}"
          files: neurotensor-windows-x86_64-${{ github.event.inputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

